################################################################
# Global configuration
################################################################

# Enable debug mode
#
# Optional
# Default: false
#
# debug = true

# Log level
#
# Optional
# Default: "ERROR"
#
# logLevel = "ERROR"

# Entrypoints to be used by frontends that do not specify any entrypoint.
# Each frontend can specify its own entrypoints.
#
# Optional
# Default: ["http"]
#
defaultEntryPoints = ["http", "https"]

################################################################
# Entrypoints configuration
################################################################

# Entrypoints definition
#
# Optional
[entryPoints]
  [entryPoints.http]
  address = ":80"
  [entryPoints.https]
  address = ":443"
    [entryPoints.https.tls]
      [[entryPoints.https.tls.certificates]]
      certFile = "/etc/ssl/certs/traefik.cert.pem"
      keyFile = "/etc/ssl/private/traefik.key.pem"

################################################################
# Traefik logs configuration
################################################################

# Traefik logs
# Enabled by default and log to stdout
#
# Optional
#
# [traefikLog]

  # Sets the filepath for the traefik log. If not specified, stdout will be used.
  # Intermediate directories are created if necessary.
  #
  # Optional
  # Default: os.Stdout
  #
  # filePath = "log/traefik.log"

  # Format is either "json" or "common".
  #
  # Optional
  # Default: "common"
  #
  # format = "common"

################################################################
# Access logs configuration
################################################################

# Enable access logs
# By default it will write to stdout and produce logs in the textual
# Common Log Format (CLF), extended with additional fields.
#
# Optional
#
# [accessLog]

  # Sets the file path for the access log. If not specified, stdout will be used.
  # Intermediate directories are created if necessary.
  #
  # Optional
  # Default: os.Stdout
  #
  # filePath = "/path/to/log/log.txt"

  # Format is either "json" or "common".
  #
  # Optional
  # Default: "common"
  #
  # format = "common"

################################################################
# API and dashboard configuration
################################################################

# Enable API and dashboard
[api]

  # Name of the related entry point
  #
  # Optional
  # Default: "traefik"
  #
  entryPoint = "traefik"

  # Enabled Dashboard
  #
  # Optional
  # Default: true
  #
  dashboard = true

################################################################
# Ping configuration
################################################################

# Enable ping
[ping]

  # Name of the related entry point
  #
  # Optional
  # Default: "traefik"
  #
  # entryPoint = "traefik"

################################################################
# Docker configuration backend
################################################################

# Enable Docker configuration backend
[docker]

  # Docker server endpoint. Can be a tcp or a unix socket endpoint.
  #
  # Required
  #
  endpoint = "unix:///var/run/docker.sock"

  # Default base domain used for the frontend rules.
  # Can be overridden by setting the "traefik.domain" label on a container.
  #
  # Optional
  #
  domain = "docker"

  # Enable watch docker changes.
  #
  # Optional
  #
  watch = true

  # Override default configuration template.
  # For advanced users :)
  #
  # Optional
  #
  # filename = "docker.tmpl"

  # Override template version
  # For advanced users :)
  #
  # Optional
  # - "1": previous template version (must be used only with older custom templates, see "filename")
  # - "2": current template version (must be used to force template version when "filename" is used)
  #
  # templateVersion = 2

  # Expose containers by default in Traefik.
  # If set to false, containers that don't have `traefik.enable=true` will be ignored.
  #
  # Optional
  # Default: true
  #
  exposedByDefault = false

  # Use the IP address from the binded port instead of the inner network one.
  #
  # In case no IP address is attached to the binded port (or in case
  # there is no bind), the inner network one will be used as a fallback.
  #
  # Optional
  # Default: false
  #
  usebindportip = true

  # Use Swarm Mode services as data provider.
  #
  # Optional
  # Default: false
  #
  swarmMode = false

  # Define a default docker network to use for connections to all containers.
  # Can be overridden by the traefik.docker.network label.
  #
  # Optional
  #
  network = "traefik"

  # Enable docker TLS connection.
  #
  # Optional
  #
  #  [docker.tls]
  #  ca = "/etc/ssl/ca.crt"
  #  cert = "/etc/ssl/docker.crt"
  #  key = "/etc/ssl/docker.key"
  #  insecureSkipVerify = true


# Enable ACME (Let's Encrypt): automatic SSL.
# [acme]

  # Email address used for registration.
  #
  # Required
  #
  #Â email = "devtool@contact.dev"

  # File or key used for certificates storage.
  #
  # Required
  #
  # storage = "/etc/traefik/acme.json"
  # or `storage = "traefik/acme/account"` if using KV store.

  # Entrypoint to proxy acme apply certificates to.
  #
  # Required
  #
  # entryPoint = "https"

  # If true, display debug log messages from the acme client library.
  #
  # Optional
  # Default: false
  #
  # acmeLogging = true

  # If true, override certificates in key-value store when using storeconfig.
  #
  # Optional
  # Default: false
  #
  # overrideCertificates = true

  # Enable certificate generation on frontends host rules.
  #
  # Optional
  # Default: false
  #
  # onHostRule = false

  # CA server to use.
  # Uncomment the line to use Let's Encrypt's staging server,
  # leave commented to go to prod.
  #
  # Optional
  # Default: "https://acme-v02.api.letsencrypt.org/directory"
  #
  # caServer = "https://acme-staging-v02.api.letsencrypt.org/directory"

  # KeyType to use.
  #
  # Optional
  # Default: "RSA4096"
  #
  # Available values : "EC256", "EC384", "RSA2048", "RSA4096", "RSA8192"
  #
  # KeyType = "RSA4096"

# Use a TLS-ALPN-01 ACME challenge.
#
# Optional (but recommended)
#
# [acme.tlsChallenge]

# Use a HTTP-01 ACME challenge.
#
# Optional
#
# [acme.httpChallenge]

  # EntryPoint to use for the HTTP-01 challenges.
  #
  # Required
  #
  # entryPoint = "http"

# Use a DNS-01 ACME challenge rather than HTTP-01 challenge.
# Note: mandatory for wildcard certificate generation.
#
# Optional
#
# [acme.dnsChallenge]

  # DNS provider used.
  #
  # Required
  #
  # provider = "cloudflare"

  # By default, the provider will verify the TXT DNS challenge record before letting ACME verify.
  # If delayBeforeCheck is greater than zero, this check is delayed for the configured duration in seconds.
  # Useful if internal networks block external DNS queries.
  #
  # Optional
  # Default: 0
  #
  # delayBeforeCheck = 0

  # Use following DNS servers to resolve the FQDN authority.
  #
  # Optional
  # Default: empty
  #
  # resolvers = ["1.1.1.1:53", "8.8.8.8:53"]

  # Disable the DNS propagation checks before notifying ACME that the DNS challenge is ready.
  #
  # NOT RECOMMENDED:
  # Increase the risk of reaching Let's Encrypt's rate limits.
  #
  # Optional
  # Default: false
  #
  # disablePropagationCheck = true

# Domains list.
# Only domains defined here can generate wildcard certificates.
# The certificates for these domains are negotiated at traefik startup only.
#
# [[acme.domains]]
#   main = "local1.com"
#   sans = ["test1.local1.com", "test2.local1.com"]
# [[acme.domains]]
#   main = "local2.com"
# [[acme.domains]]
#  main = "ddstack.io"
#  sans = ["traefik.ddstack.io"]
