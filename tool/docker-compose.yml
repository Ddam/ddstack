version: '3.7'

services:
  # Network sniffing
  wireshark:
    image: ffeldhaus/wireshark:${WIRESHARK_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_wireshark
    privileged: true
    network_mode: "service:traefik"
    depends_on:
      - traefik
    environment:
      - XPRA_PW=${WIRESHARK_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=wireshark"
      - "traefik.frontend.rule=Host:wireshark.traefik.docker"
      - "traefik.port=14500"
      - "traefik.frontend.headers.SSLRedirect=true"

  # Mails
  mailcatcher:
    image: schickling/mailcatcher:${MAILCATCHER_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_mailcatcher
    networks:
      - traefik
      - ddstack
    labels:
      - "traefik.enable=true"
      - "traefik.backend=mailcatcher"
      - "traefik.frontend.rule=Host:mailcatcher.traefik.docker"
      - "traefik.port=1080"

  adminer:
    image: adminer:${ADMINER_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_adminer
    networks:
      - traefik
      - ddstack
    labels:
      - "traefik.enable=true"
      - "traefik.backend=adminer"
      - "traefik.frontend.rule=Host:adminer.traefik.docker"
      - "traefik.port=8080"

  sqlpad:
    image: sqlpad/sqlpad:${SQLPAD_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_sqlpad
    networks:
      - traefik
      - ddstack
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sqlpad"
      - "traefik.frontend.rule=Host:sqlpad.traefik.docker"
      - "traefik.port=3000"

  redis-commander:
    image: rediscommander/redis-commander:${REDIS_COMMANDER_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_redis-commander
    environment:
      - REDIS_HOSTS=${REDIS_URI}
    networks:
      - traefik
      - ddstack
    labels:
      - "traefik.enable=true"
      - "traefik.backend=redis-commander"
      - "traefik.frontend.rule=Host:redis-commander.traefik.docker"
      - "traefik.port=8081"

  redis-memtier_benchmark:
    container_name: ${COMPOSE_PROJECT_NAME}_redis-memtier_benchmark
    build:
      context: tool/redis-memtier_benchmark
      args:
        - REDIS_MEMTIER_VERSION=${REDIS_MEMTIER_VERSION}
        - REDIS_SERVER=${REDIS_SERVER}
        - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - ddstack

volumes:
  sdc_data:
    driver: local
